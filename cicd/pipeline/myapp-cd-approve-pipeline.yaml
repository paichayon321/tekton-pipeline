apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: myapp-cd-approve-pipeline
spec:
  params:
    - name: git_repo_name
      default: spring-web-quickstart
      description: The name of the deployment to be created
    - name: environment
      type: string
      default: uat
      description: Deploy environment name "uat" or "prod"
    - name: image_tag
      description: image version number in format x.y.z for example 1.0.0
    - name: image_repo_url
      default: image-registry.openshift-image-registry.svc:5000/cicd
      description: Image registry repository where image existing
  tasks:
# Begin wait process
# Prepare service and route to approve URL          
    - name: custom-approval-pre-oc
      params:
        - name: pipelinerun_name
          value: $(context.pipelineRun.name)     
      taskRef:
        kind: Task
        name: custom-approval-pre-oc
# Waiting Task for approve
    - name: wait-for-approve
      params:
        - name: recipients
          value: ptanvann@redhat.com
        - name: pipeline_name
          value: $(context.pipeline.name) 
        - name: pipelinerun_name
          value: $(context.pipelineRun.name)     
      taskRef:
        kind: Task
        name: custom-approval
# Send Reject Mail
    - name: reject-mail-notify
      params:
        - name: recipients
          value: ptanvann@redhat.com
        - name: message
          value: $(params.image_tag) "|" $(params.environment) "| approval-task:reject"
        - name: pipeline_name
          value: $(context.pipeline.name) 
        - name: pipelinerun_name
          value: $(context.pipelineRun.name)             
      taskRef:
        kind: Task
        name: sendmail-reject
      runAfter:
        - wait-for-approve
      when:
        - input: $(tasks.wait-for-approve.results.approve_result)
          operator: in
          values:
            - "reject"
# Clean Service and Route
    - name: custom-approval-post-oc
      params:
        - name: pipelinerun_name
          value: $(context.pipelineRun.name)   
        - name: approve_result 
          value: $(tasks.wait-for-approve.results.approve_result) 
      runAfter:
        - wait-for-approve
        - custom-approval-pre-oc
      taskRef:
        kind: Task
        name: custom-approval-post-oc
# End wait process        
# Update Manifest
    - name: update-manifest-task
      params:
        - name: image_tag
          value: $(params.image_tag)
        - name: git_repo_name
          value: $(params.git_repo_name)
        - name: environment
          value: $(params.environment)
        - name: image_repo_url
          value: $(params.image_repo_url)
      taskRef:
        kind: Task
        name: update-manifest-task
      runAfter:
        - custom-approval-post-oc

# ArgoCD SyncApp
    - name: argocd-task-sync-and-wait
      params:
        - name: application-name #ArgoCD Application Prefix name
          value: myapp
        - name: environment
          value: $(params.environment)
      taskRef:
        kind: Task
        name: argocd-task-sync-and-wait
      runAfter:
        - update-manifest-task
          
  finally:
    - name: clean-taskrun
      params:
        - name: TKN_IMAGE
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-cli-tkn-rhel8@sha256:72394dfaed68c4b6b490c3c971fb1d9f0139f8656f6672b55b8e02ea98d1298d
        - name: SCRIPT
          value: tkn $@
        - name: ARGS
          value:
            - taskrun delete --keep 20 -f
      taskRef:
        kind: ClusterTask
        name: tkn
    - name: clean-pipelinerun
      params:
        - name: TKN_IMAGE
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-cli-tkn-rhel8@sha256:72394dfaed68c4b6b490c3c971fb1d9f0139f8656f6672b55b8e02ea98d1298d
        - name: SCRIPT
          value: tkn $@
        - name: ARGS
          value:
            - pipelinerun delete --keep 5 -f
      taskRef:
        kind: ClusterTask
        name: tkn
    - name: mail-notify
      # displayName: "Notification from $(context.pipeline.name)"
      params:
        - name: recipients
          value: ptanvann@redhat.com
        - name: message
          value: $(tasks.update-manifest-task.results.image_tag) "|" $(tasks.update-manifest-task.results.environment) "| update-manifest-task :" $(tasks.update-manifest-task.status) "| argocd-task-sync :" $(tasks.argocd-task-sync-and-wait.status)
        - name: pipeline_name
          value: $(context.pipeline.name) 
        - name: pipelinerun_name
          value: $(context.pipelineRun.name)             
      taskRef:
        kind: Task
        name: sendmail-cd

