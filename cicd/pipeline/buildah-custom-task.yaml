apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    operator.tekton.dev/last-applied-hash: a1002d2bf1b4bfa198fa9d68e4a2754e0e742068a26d29656d95331b714ad0b8
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/tags: image-build-push
  name: buildah-custom
  labels:
    app.kubernetes.io/version: '0.1'
    operator.tekton.dev/operand-name: openshift-pipelines-addons
    operator.tekton.dev/provider-type: redhat
spec:
  params:
    - description: Reference of the image buildah will produce.
      name: IMAGE
      type: string
    - default: >-
        registry.redhat.io/rhel8/buildah@sha256:3c2ea396a114221575a4031d90d28c43563f7b96288374e0ba8b22de3ed97b5a
      description: The location of the buildah builder image.
      name: BUILDER_IMAGE
      type: string
    - default: vfs
      description: Set buildah storage driver
      name: STORAGE_DRIVER
      type: string
    - default: ./docker/Dockerfile
      description: Path to the Dockerfile to build.
      name: DOCKERFILE
      type: string
    - default: .
      description: Path to the directory to use as context.
      name: CONTEXT
      type: string
    - default: 'true'
      description: >-
        Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
      name: TLSVERIFY
      type: string
    - default: oci
      description: 'The format of the built container, oci or docker'
      name: FORMAT
      type: string
    - default: ''
      description: Extra parameters passed for the build command when building images.
      name: BUILD_EXTRA_ARGS
      type: string
    - default: ''
      description: Extra parameters passed for the push command when pushing images.
      name: PUSH_EXTRA_ARGS
      type: string
    - default: 'false'
      description: Skip pushing the built image
      name: SKIP_PUSH
      type: string
  results:
    - description: Digest of the image just built.
      name: IMAGE_DIGEST
      type: string
    - description: Image repository where the built image would be pushed to
      name: IMAGE_URL
      type: string
  steps:
    - image: $(params.BUILDER_IMAGE)
      name: build-and-push
      resources: {}
      script: |
        buildah --storage-driver=vfs build --format oci --tls-verify=false --no-cache \
         -f ./docker/Dockerfile  \ 
         -t image-registry.openshift-image-registry.svc:5000/cicd/$(params.git_repo_name):$(tasks.initial-info.results.image_tag)
        
        buildah --storage-driver=vfs push --format oci --tls-verify=false \
         image-registry.openshift-image-registry.svc:5000/cicd/$(params.git_repo_name):$(tasks.initial-info.results.image_tag) \
          docker://$(params.git_repo_name):$(tasks.initial-info.results.image_tag)

      securityContext:
        capabilities:
          add:
            - SETFCAP
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: $(workspaces.source.path)
  volumes:
    - emptyDir: {}
      name: varlibcontainers
  workspaces:
    - name: source
    - description: >-
        An optional workspace that allows providing a .docker/config.json file
        for Buildah to access the container registry. The file should be placed
        at the root of the Workspace with name config.json or .dockerconfigjson.
      name: dockerconfig
      optional: true
